// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.EndToEnd.Tests.AdditionalPaymentsEnglishAndMaths
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Non-levy learner, provider changes aim sequence numbers after payments have alrea" +
        "dy occurred PV2-393")]
    public partial class Non_LevyLearnerProviderChangesAimSequenceNumbersAfterPaymentsHaveAlreadyOccurredPV2_393Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Non-Levy learner, provider changes aim sequence numbers PV2-393.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Non-levy learner, provider changes aim sequence numbers after payments have alrea" +
                    "dy occurred PV2-393", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Non-levy learner provider changes aim sequence numbers after payments have alread" +
            "y occurred")]
        [NUnit.Framework.TestCaseAttribute("R03/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R04/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R05/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R06/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R07/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R08/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R09/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R10/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R11/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R12/Current Academic Year", null)]
        public virtual void Non_LevyLearnerProviderChangesAimSequenceNumbersAfterPaymentsHaveAlreadyOccurred(string collection_Period, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Non-levy learner provider changes aim sequence numbers after payments have alread" +
                    "y occurred", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learner Reference Number",
                        "Uln"});
            table50.AddRow(new string[] {
                        "abc123",
                        "12345678"});
#line 5
 testRunner.Given("the following learners", ((string)(null)), table50, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Aim Reference",
                        "Start Date",
                        "Planned Duration",
                        "Actual Duration",
                        "Aim Sequence Number",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "Completion Status"});
            table51.AddRow(new string[] {
                        "ZPROG001",
                        "06/Aug/Current Academic Year",
                        "12 months",
                        "",
                        "1",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "continuing"});
#line 8
 testRunner.And("the following aims", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Details",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Contract Type",
                        "Aim Sequence Number",
                        "SFA Contribution Percentage"});
            table52.AddRow(new string[] {
                        "1st price details",
                        "9000",
                        "06/Aug/Current Academic Year",
                        "0",
                        "06/Aug/Current Academic Year",
                        "Act2",
                        "1",
                        "90%"});
#line 11
 testRunner.And("price details as follows", ((string)(null)), table52, "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing"});
            table53.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "May/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "600",
                        "0",
                        "0"});
            table53.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "600",
                        "0",
                        "0"});
#line 15
    testRunner.And("the following earnings had been generated for the learner", ((string)(null)), table53, "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "Transaction Type"});
            table54.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "540",
                        "60",
                        "Learning"});
            table54.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "540",
                        "60",
                        "Learning"});
#line 29
    testRunner.And("the following provider payments had been generated", ((string)(null)), table54, "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Aim Type",
                        "Aim Reference",
                        "Start Date",
                        "Planned Duration",
                        "Actual Duration",
                        "Aim Sequence Number",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "Completion Status"});
            table55.AddRow(new string[] {
                        "Maths or English",
                        "12345",
                        "06/Aug/Current Academic Year",
                        "12 months",
                        "",
                        "1",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "continuing"});
            table55.AddRow(new string[] {
                        "Programme",
                        "ZPROG001",
                        "06/Aug/Current Academic Year",
                        "12 months",
                        "",
                        "2",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "continuing"});
#line 35
    testRunner.But("aims details are changed as follows", ((string)(null)), table55, "But ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Details",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Contract Type",
                        "Aim Sequence Number",
                        "SFA Contribution Percentage"});
            table56.AddRow(new string[] {
                        "1st price details",
                        "9000",
                        "06/Aug/Current Academic Year",
                        "0",
                        "06/Aug/Current Academic Year",
                        "Act2",
                        "2",
                        "90%"});
            table56.AddRow(new string[] {
                        "2nd price details",
                        "0",
                        "06/Aug/Current Academic Year",
                        "0",
                        "06/Aug/Current Academic Year",
                        "Act2",
                        "1",
                        "90%"});
#line 41
 testRunner.And("price details are changed as follows", ((string)(null)), table56, "And ");
#line 45
 testRunner.When(string.Format("the amended ILR file is re-submitted for the learners in collection period {0}", collection_Period), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "OnProgrammeMathsAndEnglish"});
            table57.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "May/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table57.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
#line 47
    testRunner.Then("the following learner earnings should be generated", ((string)(null)), table57, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "OnProgrammeMathsAndEnglish"});
            table58.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
            table58.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "600",
                        "0",
                        "0",
                        "39.25"});
#line 61
    testRunner.And("only the following payments will be calculated", ((string)(null)), table58, "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table59.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table59.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table59.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
#line 77
    testRunner.And("only the following provider payments will be recorded", ((string)(null)), table59, "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table60.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "540",
                        "60",
                        "0",
                        "Learning"});
            table60.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table60.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
#line 101
 testRunner.And("at month end only the following provider payments will be generated", ((string)(null)), table60, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
