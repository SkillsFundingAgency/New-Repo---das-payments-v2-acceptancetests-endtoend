// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.EndToEnd.Tests.EmployerStops
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Employer Stops PV2-943")]
    public partial class EmployerStopsPV2_943Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "E2E -PV2-943 - Levy learner, Employer stops commitment day after course completed, completion payment paid.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Employer Stops PV2-943", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Employer stops commitment after the day that the course is completed, but in the " +
            "same month. Completion payment to be paid")]
        [NUnit.Framework.TestCaseAttribute("R01/Current Academic Year", "15000", null)]
        public virtual void EmployerStopsCommitmentAfterTheDayThatTheCourseIsCompletedButInTheSameMonth_CompletionPaymentToBePaid(string collection_Period, string levyBalance, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Employer stops commitment after the day that the course is completed, but in the " +
                    "same month. Completion payment to be paid", null, exampleTags);
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 44
testRunner.Given(string.Format("the employer levy account balance in collection period {0} is {1}", collection_Period, levyBalance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date",
                        "end date",
                        "status",
                        "effective from",
                        "stop effective from"});
            table452.AddRow(new string[] {
                        "593",
                        "20",
                        "1",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "01/Sep/Current Academic Year",
                        "stopped",
                        "06/Aug/Last Academic Year",
                        "07/Aug/Current Academic Year"});
#line 47
 testRunner.And("the following apprenticeships exist", ((string)(null)), table452, "And ");
#line hidden
            TechTalk.SpecFlow.Table table453 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "Planned Duration",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Actual Duration",
                        "Completion Status",
                        "Contract Type",
                        "Aim Sequence Number",
                        "Aim Reference",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "SFA Contribution Percentage"});
            table453.AddRow(new string[] {
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "",
                        "",
                        "",
                        "continuing",
                        "Act1",
                        "1",
                        "ZPROG001",
                        "593",
                        "1",
                        "20",
                        "16-18 Apprenticeship (From May 2017) Levy Contract",
                        "90%"});
#line 51
 testRunner.And("the provider previously submitted the following learner details", ((string)(null)), table453, "And ");
#line hidden
            TechTalk.SpecFlow.Table table454 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing"});
            table454.AddRow(new string[] {
                        "Aug/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Sep/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Oct/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Nov/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Dec/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Jan/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Feb/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Mar/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Apr/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "May/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Jun/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
            table454.AddRow(new string[] {
                        "Jul/Last Academic Year",
                        "1000",
                        "0",
                        "0"});
#line 54
    testRunner.And("the following earnings had been generated for the learner", ((string)(null)), table454, "And ");
#line hidden
            TechTalk.SpecFlow.Table table455 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "Levy Payments",
                        "Transaction Type"});
            table455.AddRow(new string[] {
                        "R01/Last Academic Year",
                        "Aug/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R02/Last Academic Year",
                        "Sep/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R03/Last Academic Year",
                        "Oct/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R05/Last Academic Year",
                        "Dec/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R06/Last Academic Year",
                        "Jan/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R07/Last Academic Year",
                        "Feb/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R08/Last Academic Year",
                        "Mar/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R09/Last Academic Year",
                        "Apr/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R10/Last Academic Year",
                        "May/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R11/Last Academic Year",
                        "Jun/Last Academic Year",
                        "1000",
                        "Learning"});
            table455.AddRow(new string[] {
                        "R12/Last Academic Year",
                        "Jul/Last Academic Year",
                        "1000",
                        "Learning"});
#line 69
    testRunner.And("the following provider payments had been generated", ((string)(null)), table455, "And ");
#line hidden
            TechTalk.SpecFlow.Table table456 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "Planned Duration",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Actual Duration",
                        "Completion Status",
                        "Contract Type",
                        "Aim Sequence Number",
                        "Aim Reference",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "SFA Contribution Percentage"});
            table456.AddRow(new string[] {
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "",
                        "",
                        "12 months",
                        "completed",
                        "Act1",
                        "1",
                        "ZPROG001",
                        "593",
                        "1",
                        "20",
                        "16-18 Apprenticeship (From May 2017) Levy Contract",
                        "90%"});
#line 83
    testRunner.But("the Provider now changes the Learner details as follows", ((string)(null)), table456, "But ");
#line hidden
            TechTalk.SpecFlow.Table table457 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode Id",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Residual Training Price",
                        "Residual Training Price Effective Date",
                        "Residual Assessment Price",
                        "Residual Assessment Price Effective Date",
                        "SFA Contribution Percentage",
                        "Contract Type"});
            table457.AddRow(new string[] {
                        "pe-1",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "0",
                        "",
                        "0",
                        "",
                        "0",
                        "",
                        "90%",
                        "Act1"});
#line 86
 testRunner.And("price details as follows", ((string)(null)), table457, "And ");
#line 89
 testRunner.When(string.Format("the amended ILR file is re-submitted for the learners in collection period {0}", collection_Period), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table458 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "Price Episode Identifier"});
            table458.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "0",
                        "3000",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "May/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
            table458.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "pe-1"});
#line 90
 testRunner.Then("the following learner earnings should be generated", ((string)(null)), table458, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table459 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing"});
            table459.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "3000",
                        "0"});
#line 104
    testRunner.And("at month end only the following payments will be calculated", ((string)(null)), table459, "And ");
#line hidden
            TechTalk.SpecFlow.Table table460 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "Levy Payments",
                        "Transaction Type"});
            table460.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "3000",
                        "Completion"});
#line 108
 testRunner.And("only the following provider payments will be recorded", ((string)(null)), table460, "And ");
#line hidden
            TechTalk.SpecFlow.Table table461 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "Levy Payments",
                        "Transaction Type"});
            table461.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "3000",
                        "Completion"});
#line 111
 testRunner.And("only the following provider payments will be generated", ((string)(null)), table461, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
